openapi: '3.0.3'
info:
  version: 0.0.1
  title: Balances Service
servers:
  - url: http://localhost:8001/api/v1
    description: local

paths:
  /balances:
    get:
      tags:
        - "Balances"
      summary: "Get a balance of card"
      operationId: getBalanceByCard
      parameters:
        - $ref: '#/components/parameters/cardId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceDto'
          description: "Success"

  /balances/add/{points}:
    post:
      tags:
        - "Balances"
      summary: "Add points by card identifier"
      operationId: addPoints
      parameters:
        - $ref: '#/components/parameters/cardId'
        - $ref: '#/components/parameters/pointsValue'
        - $ref: '#/components/parameters/expirationDate'
      responses:
        "200":
          description: "Task has been created"

  /balances/spend/{points}:
    post:
      tags:
        - "Balances"
      summary: "Spend points by card identifier"
      operationId: spendPoints
      parameters:
        - $ref: '#/components/parameters/cardId'
        - $ref: '#/components/parameters/pointsValue'
      responses:
        "200":
          description: "Success"
        "406":
          description: "Not enough points to spend"

components:
  schemas:
    BalanceDto:
      type: object
      required:
        - cardId
        - value
      properties:
        cardId:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
  parameters:
    cardId:
      name: cardId
      in: query
      description: "Card identifier"
      example: "12"
      required: true
      schema:
        type: integer
        format: int64
    pointsValue:
      name: points
      in: path
      description: "Number of points"
      example: "12"
      required: true
      schema:
        type: integer
        format: int32
    expirationDate:
      name: expirationDate
      in: query
      description: "Time presented in ISO-8601 format"
      example: "2050-01-01T00:00:00Z"
      required: true
      schema:
        type: string
